apiVersion: studio.windriver.com/v1
kind: Pipeline
metadata:
  name: build-api-service
  description: "Build and test the main API service"
  labels:
    team: backend
    environment: ci
    service: api
spec:
  runtime: docker
  timeout: 3600
  parameters:
    - name: branch
      default: main
      description: "Git branch to build"
    - name: environment
      default: staging
      description: "Target environment"
  stages:
    - name: checkout
      image: alpine/git:latest
      commands:
        - git clone https://github.com/company/api-service.git
        - cd api-service
        - git checkout ${branch}
    - name: build
      image: node:18-alpine
      depends_on: [checkout]
      commands:
        - cd api-service
        - npm ci
        - npm run build
        - npm run test
      artifacts:
        - dist/
        - coverage/
    - name: package
      image: docker:latest
      depends_on: [build]
      commands:
        - cd api-service
        - docker build -t api-service:${BUILD_ID} .
        - docker push registry.company.com/api-service:${BUILD_ID}
    - name: deploy-staging
      image: kubectl:latest
      depends_on: [package]
      when: ${environment} == "staging"
      commands:
        - kubectl set image deployment/api-service api-service=registry.company.com/api-service:${BUILD_ID}
        - kubectl rollout status deployment/api-service
  notifications:
    on_success:
      - slack: "#deployments"
    on_failure:
      - slack: "#alerts"
      - email: ["team-backend@company.com"]